name: nix

on:
  push:
    branches: [master]
  pull_request:

jobs:
  build:
    name: Build doit-ext with nix
    strategy:
      matrix:
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v2
      - name: Run the magic nix cache
        uses: DeterminateSystems/magic-nix-cache-action@v2
      - name: Check with nix
        run: |
          nix flake check
      - name: Build package with poetry
        run: |
          nix develop -c poetry check
          nix develop -c poetry build
      - name: Check that version in pyproject.toml is equivalent to tag
        if: >
          github.event_name == 'push'
          && startsWith(github.ref, 'refs/tags')
        run: |
          nix run .#sync-git-tag-with-poetry
          git diff --exit-code
      - name: Publish distribution ðŸ“¦ to PyPI on tagged commit pushes
        # Publish to PyPI on tagged commit pushes on master
        if: >
          github.event_name == 'push'
          && startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@v1.8.7
        with:
          user: __token__
          password: ${{ secrets.PYPI_PASSWORD }}
